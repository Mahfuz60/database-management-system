#Select Statement
----------------------
SELECT --------
FROM   --------
WHERE  --------

LIMIT/ORDER BY

#FUNCTION
---------------
1.UPPER
=>convert to lowercase to uppercase
ex:abc->ABC ,Abc->ABC 

2.LOWER 
=>convert to uppercase to lowercase 
ex: ABC->abc,Abc->abc 

3.ABS
=>absoulte value(modulas)
ex:|-2|=2,|2|=2
ABS(-2)=>2

4.COS
=>COS90=0

5.ACOS
=>ACOS main cos unverse[cos^-1]
ex:cos^-1(1)=0
6.SIN
=>sin90=1

7.ASIN
=>sin unverse 
sin^-1(1)=90

8.TAN
=>tan90=1
9.ATAN 
=>tan unverse 
ex:tan^-1(1)=90
10.CEIL
=>float value to convert integer
ex:CEIL(25.5)=26,CEIL(25)=25
11.FLOOR
ex:FLOOR(25.5)=25,FLOOR(25)=25
12.DEGREES
=>convert to redaint to degree
ex:DEGREES(radaint value)
->DEGREES(5)

13.DIV
=>convert to division
ex:10 DIV 2 =5
14.EXP
=>exponentail value return
ex: EXP(10)=e^10,EXP(-5)=e^-5

15.GREATEST
=>list to return big value 
ex:GREATEST(1,5,3,9,10,15,4)=>15

16.LEAST
=>list to return small value
ex:LEAST(1,4,5,2,6,10)=1

17.LN
=>naturan logarithm
loge()=>loge(10)
18.LOG 
=>LOG(10)
19.LOG10
=>calculate to 10 base logarithm
=>LOG10()
20.LOG2
=>calculate to 2 base logarithm

21.MOD 
=>10 MOD 3=1

22.PI
=>PI()=>3.1416....

23.POW 
=>POW(2,3)=2^3
24.RADAINT
=>convert to degree to radaint
ex:RADAINT(degree)

25.RAND 
=>return to random value[0---1]
26.ROUND
=>calculate to value rounding
ex:ROUND(135.375,2)=135.38

27.SQRT
=>work square root
ex:âˆš16 = 4 ,SQRT(16)=4
28.TRUNCATE
=>dosomic ar pore 2 digit count kore reke dibe 
ex:TRUNCATE(135.375,2)=135.37


@@@show the function output
-----------------------------------
SELECT UPPER("this is a pen")
=>THIS IS A PEN 

SELECT PI()

SELECT ROUND(135.35)




exercise:
SELECT UPPER("my name is mahfuz alam");
SELECT PI();
SELECT COS(90);
SELECT ROUND(145.55959);	
SELECT FLOOR(123.3444);
SELECT SQRT(25);
SELECT (45 MOD 3);
SELECT GREATEST(1,34,35,45,32);
SELECT TRUNCATE(1234.4455,3);

#GROUP FUNCTION
--------------------
MAX,MIN,COUNT,AVG(average),SUM 
ex:
SELECT MAX(salary)
FROM employees;

#GROUP BY 
-------------------------
->divide into groups 
->sum,max,count,avg,min 

ex:
SELECT job_id, COUNT(*)
FROM employees
GROUP BY job_id;
ex-2:
SELECT job_id,MAX(salary)
FROM employees
GROUP BY job_id;

#HAVING[apply to condition group by]
-------------------------------------
SELECT job_id,COUNT(*)
FROM employees
GROUP BY job_id
HAVING COUNT(*)>1;