#SET Operations
------------------
 =>not repeated value allow
 =>sorted(not mendory always)
 1,2,3,4,2,3,9,10
 S={1,2,3,4,9,10}

 Set Operations example
 --------------------
 A={1,2,3,4}
 B={5,6,7,8}

A UNION B
A U B={1,2,3,4}U {5,6,7,8}
     ={1,2,3,4,5,6,7,8}

#SET Operations In MYSQL
-------------------------
->UNION
->UNION all 
->MINUS 

syntex
------------
SELECT id FROM Student UNION SELECT id FROM Teacher


@ON DELETE
-----------------
example:
use phithon;

-- DROP TABLE IF EXISTS Students;

CREATE TABLE Students(
sNo INT PRIMARY KEY,
sName VARCHAR(20),
age INT
);

INSERT INTO Students(sNo,sName,age)
VALUES(1,"hridoy",26),
		(2,"khirul",26),
        (3,"rafsan",27),
        (4,"kauser",27);

SELECT *FROM Students;

CREATE TABLE Courses(
cNo INT PRIMARY KEY,
cName VARCHAR(20)
);

INSERT INTO Courses(cNo,cName)
VALUES(101,"javsScript"),
		(102,"python"),
        (103,"C++"),
        (104,"golang");
SELECT *FROM Courses;        

CREATE TABLE enrollment(
sNo INT,
cNo INT,
jDate DATE,
PRIMARY KEY(sNo,cNo),
 FOREIGN KEY(sNo)
	REFERENCES Students(sNo)
    ON DELETE CASCADE,
 FOREIGN KEY(cNo)
	REFERENCES Courses(cNo)
    ON DELETE CASCADE
);


INSERT INTO enrollment(sNo,cNo,jDate)
VALUES(1,101,"01-05-20"),
		(1,102,"01-05-20"),
        (2,103,"05-05-21"),
        (2,104,"05-05-21");
SELECT *FROM enrollment;    


SET SQL_SAFE_UPDATES=0; 
DELETE FROM Students 
WHERE sName="khirul";    

SELECT *FROM students;  
SELECT *FROM enrollment;

@TRIGGERS
-----------
syntex
----------
CREATE TRIGGER tr_cap
BEFORE INSERT ON Employee
FOR EACH ROW
SET NEW.name=UPPER(NEW.name)

@DATE and TIME
-----------------
//DAY SEARCH
  SELECT DAYOFMONTH("2001-05-01");
//MONTH SEARCH
SELECT MONTH("2022-10-02");

//ADD TO DAY
SELECT ADDDATE("2022-01-10",30);
//ADD TIME 
SELECT ADDTIME("2004-12-32 22:55:54.9999","1:1:2.00003");

//CONVERT TIME ZONE 
SELECT CONVERT_TZ("2004-01-01 12:00:00","GMT","MET");
SELECT CONVERT_TZ("2004-01-01 12:00:00","+00:00","+10:00");

//CURRENT DATE 
SELECT CURDATE();
//CURRENT TIME 
SELECT CURTIME();
SELECT CURTIME(4);

//SEARCH DATE 
SELECT DATE("2003-12-31 01:02:03");

//DATE FORMAT 
SELECT DATE_FORMAT("2004-10-04 22:23:00","%W "M %Y");
SELECT DATE_FORMAT("2004-10-04 22:23:00",GET_FORMAT(DATE,"EUR"));


//SOME EXAMPLE 
-- https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html

SELECT DAYOFMONTH('2001-11-02');

SELECT MONTH('2005-10-05');

SELECT ADDDATE('2008-01-02', 31);


SELECT ADDTIME('2007-12-31 23:59:59.999999', '1 1:1:1.000002');


SELECT CONVERT_TZ('2004-01-01 12:00:00','GMT','MET');


SELECT CONVERT_TZ('2004-01-01 12:00:00','+00:00','+10:00');


SELECT CURDATE();


SELECT CURTIME();

SELECT CURTIME(4);

SELECT DATE('2003-12-31 01:02:03');


SELECT DATEDIFF('2007-12-31 23:59:59','2007-12-30');


SELECT DATEDIFF('2010-11-30 23:59:59','2010-12-31');

SELECT DATE_ADD('2018-05-01',INTERVAL 1 DAY);

SELECT DATE_SUB('2018-05-01',INTERVAL 1 YEAR);

SELECT DATE_FORMAT('2090-10-04 22:23:00', '%W %M %Y');


SELECT DATE_FORMAT('2007-10-04 22:23:00', '%H:%i:%s');
SELECT DATE_FORMAT('1900-10-04 22:23:00','%D %y %a %d %m %b %j');
SELECT DAYOFMONTH('2007-02-03');
SELECT DAYOFWEEK('2023-03-11');
SELECT DATE_FORMAT('2003-10-03',GET_FORMAT(DATE,'EUR'));

